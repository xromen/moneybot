// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyBotTelegram.Infrasctructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MoneyBotTelegram.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MoneyBotTelegram.Infrasctructure.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_id");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_categories_parent_id");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("MoneyBotTelegram.Infrasctructure.Entities.Place", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_places");

                    b.ToTable("places", (string)null);
                });

            modelBuilder.Entity("MoneyBotTelegram.Infrasctructure.Entities.PurchaseItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric")
                        .HasColumnName("quantity");

                    b.Property<long?>("TransactionId")
                        .HasColumnType("bigint")
                        .HasColumnName("transaction_id");

                    b.HasKey("Id")
                        .HasName("pk_purchase_items");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_purchase_items_category_id");

                    b.HasIndex("TransactionId")
                        .HasDatabaseName("ix_purchase_items_transaction_id");

                    b.ToTable("purchase_items", (string)null);
                });

            modelBuilder.Entity("MoneyBotTelegram.Infrasctructure.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<long>("Categoryid")
                        .HasColumnType("bigint")
                        .HasColumnName("categoryid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<long?>("PlaceId")
                        .HasColumnType("bigint")
                        .HasColumnName("place_id");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_transactions");

                    b.HasIndex("Categoryid")
                        .HasDatabaseName("ix_transactions_categoryid");

                    b.HasIndex("PlaceId")
                        .HasDatabaseName("ix_transactions_place_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_transactions_user_id");

                    b.ToTable("transactions", (string)null);
                });

            modelBuilder.Entity("MoneyBotTelegram.Infrasctructure.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long?>("FamilyParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("family_parent_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("FamilyParentId")
                        .HasDatabaseName("ix_users_family_parent_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("MoneyBotTelegram.Infrasctructure.Entities.Category", b =>
                {
                    b.HasOne("MoneyBotTelegram.Infrasctructure.Entities.Category", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .HasConstraintName("fk_categories_categories_parent_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MoneyBotTelegram.Infrasctructure.Entities.PurchaseItem", b =>
                {
                    b.HasOne("MoneyBotTelegram.Infrasctructure.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchase_items_categories_category_id");

                    b.HasOne("MoneyBotTelegram.Infrasctructure.Entities.Transaction", null)
                        .WithMany("Items")
                        .HasForeignKey("TransactionId")
                        .HasConstraintName("fk_purchase_items_transactions_transaction_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MoneyBotTelegram.Infrasctructure.Entities.Transaction", b =>
                {
                    b.HasOne("MoneyBotTelegram.Infrasctructure.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transactions_categories_categoryid");

                    b.HasOne("MoneyBotTelegram.Infrasctructure.Entities.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .HasConstraintName("fk_transactions_places_place_id");

                    b.HasOne("MoneyBotTelegram.Infrasctructure.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transactions_users_user_id");

                    b.Navigation("Category");

                    b.Navigation("Place");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyBotTelegram.Infrasctructure.Entities.User", b =>
                {
                    b.HasOne("MoneyBotTelegram.Infrasctructure.Entities.User", "FamilyParent")
                        .WithMany()
                        .HasForeignKey("FamilyParentId")
                        .HasConstraintName("fk_users_users_family_parent_id");

                    b.Navigation("FamilyParent");
                });

            modelBuilder.Entity("MoneyBotTelegram.Infrasctructure.Entities.Transaction", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
